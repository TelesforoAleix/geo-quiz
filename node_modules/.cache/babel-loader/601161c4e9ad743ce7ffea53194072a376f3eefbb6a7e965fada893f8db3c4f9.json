{"ast":null,"code":"var _jsxFileName = \"/project/workspace/src/components/QuestionAB.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport ScoreContext from \"./context/ScoreContext\";\nimport GameContext from \"./context/GameContext\";\nimport GameOverScreen from \"./GameOVerScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionAB() {\n  _s();\n  const [question, setQuestion] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [answered, setAnswered] = useState(false);\n  const {\n    increaseScore,\n    reduceLife,\n    lifes,\n    restartGame\n  } = useContext(ScoreContext);\n  const {\n    getQuestion,\n    gameTopic\n  } = useContext(GameContext);\n  const [round, setRound] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  function checkAnswer(selectedOption) {\n    setSelectedOption(selectedOption);\n    setAnswered(true);\n    if (selectedOption === question.answer) {\n      increaseScore();\n    } else {\n      reduceLife();\n    }\n    setRound(prevRound => prevRound + 1);\n  }\n  useEffect(() => {\n    if (lifes === 0) {\n      setGameOver(true);\n    } else if (round > 0) {\n      const timeout = setTimeout(() => {\n        setSelectedOption(null);\n        setAnswered(false);\n        setQuestion(getQuestion());\n      }, 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [round, lifes, getQuestion]);\n  useEffect(() => {\n    setQuestion(getQuestion());\n  }, [getQuestion]);\n  const restart = () => {\n    setRound(0);\n    setGameOver(false);\n    restartGame();\n    setAnswered(false);\n    setQuestion(getQuestion());\n  };\n  const getDetailAnswer = municipi => {\n    switch (gameTopic) {\n      case 'population':\n        return municipi.poblacio + ' habitants';\n      case 'altitude':\n        return municipi.altitud + ' m';\n      case 'surface':\n        return municipi.superficie + ' m2';\n      default:\n        return 'Not rendered';\n    }\n  };\n  if (gameOver) {\n    return /*#__PURE__*/_jsxDEV(GameOverScreen, {\n      onRestart: restart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  if (!question) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"question-test\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"question\",\n      children: question.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-ab\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => checkAnswer(question.option1),\n        className: \"game-buttons-ab\",\n        disabled: answered,\n        style: {\n          backgroundColor: answered && selectedOption === question.option1 ? question.option1 === question.answer ? \"green\" : \"red\" : \"initial\"\n        },\n        children: [question.option1.municipi, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 16\n          },\n          children: answered ? getDetailAnswer(question.option1) : question.option1.comarca\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => checkAnswer(question.option2),\n        className: \"game-buttons-ab\",\n        disabled: answered,\n        style: {\n          backgroundColor: answered && selectedOption === question.option2 ? question.option2 === question.answer ? \"green\" : \"red\" : \"initial\"\n        },\n        children: [question.option2.municipi, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: 16\n          },\n          children: answered ? getDetailAnswer(question.option2) : question.option2.comarca\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionAB, \"sCOZOaIXS5fLD0dYd+1Q5bInanA=\");\n_c = QuestionAB;\nexport default QuestionAB;\nvar _c;\n$RefreshReg$(_c, \"QuestionAB\");","map":{"version":3,"names":["React","useState","useContext","useEffect","ScoreContext","GameContext","GameOverScreen","jsxDEV","_jsxDEV","QuestionAB","_s","question","setQuestion","selectedOption","setSelectedOption","answered","setAnswered","increaseScore","reduceLife","lifes","restartGame","getQuestion","gameTopic","round","setRound","gameOver","setGameOver","checkAnswer","answer","prevRound","timeout","setTimeout","clearTimeout","restart","getDetailAnswer","municipi","poblacio","altitud","superficie","onRestart","fileName","_jsxFileName","lineNumber","columnNumber","className","children","title","onClick","option1","disabled","style","backgroundColor","fontSize","comarca","option2","_c","$RefreshReg$"],"sources":["/project/workspace/src/components/QuestionAB.jsx"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport ScoreContext from \"./context/ScoreContext\";\nimport GameContext from \"./context/GameContext\";\nimport GameOverScreen from \"./GameOVerScreen\";\n\nfunction QuestionAB() {\n  const [question, setQuestion] = useState(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n  const [answered, setAnswered] = useState(false);\n  const { increaseScore, reduceLife, lifes, restartGame } = useContext(ScoreContext);\n  const { getQuestion, gameTopic } = useContext(GameContext);\n  const [round, setRound] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  function checkAnswer(selectedOption) {\n     setSelectedOption(selectedOption);\n    setAnswered(true);\n    if (selectedOption === question.answer) {\n      increaseScore();\n    } else {\n      reduceLife();\n    }\n    setRound((prevRound) => prevRound + 1);\n  }\n\n  useEffect(() => {\n    if (lifes === 0) {\n      setGameOver(true);\n    } else if (round > 0) {\n      const timeout = setTimeout(() => {\n        setSelectedOption(null);\n        setAnswered(false);\n        setQuestion(getQuestion());\n      }, 2000);\n      return () => clearTimeout(timeout);\n    }\n  }, [round, lifes, getQuestion]);\n\n  useEffect(() => {\n    setQuestion(getQuestion());\n  }, [getQuestion]);\n\n  const restart = () => {\n    setRound(0);\n    setGameOver(false);\n    restartGame();\n    setAnswered(false);\n    setQuestion(getQuestion());\n  };\n\n  const getDetailAnswer = (municipi) => {\n    switch (gameTopic) {\n      case 'population':\n        return municipi.poblacio + ' habitants';\n      case 'altitude':\n        return municipi.altitud + ' m';\n      case 'surface':\n        return municipi.superficie + ' m2';\n      default:\n        return 'Not rendered';\n    }\n  }\n\n  if (gameOver) {\n    return <GameOverScreen onRestart={restart} />;\n  }\n\n  if (!question) {\n    return <div className=\"message\">Loading...</div>;\n  }\n\n\n  return (\n    <div className=\"question-test\">\n      <h2 className=\"question\">{question.title}</h2>\n      <div className=\"question-ab\">\n\n\n        <button\n          onClick={() => checkAnswer(question.option1)}\n          className=\"game-buttons-ab\"\n          disabled={answered}\n          style={{\n            backgroundColor:\n              answered && selectedOption === question.option1\n                ? question.option1 === question.answer\n                  ? \"green\"\n                  : \"red\"\n                : \"initial\",\n          }}>\n          {question.option1.municipi}\n          <br />\n          <span style={{ fontSize: 16 }}>\n            {answered ? getDetailAnswer(question.option1) : question.option1.comarca}\n          </span>\n        </button>\n\n\n        <button\n          onClick={() => checkAnswer(question.option2)}\n          className=\"game-buttons-ab\"\n          disabled={answered}\n          style={{\n            backgroundColor:\n              answered && selectedOption === question.option2\n                ? question.option2 === question.answer\n                  ? \"green\"\n                  : \"red\"\n                : \"initial\",\n          }}\n        >\n          {question.option2.municipi}\n          <br />\n          <span style={{ fontSize: 16 }}>\n            {answered ? getDetailAnswer(question.option2) : question.option2.comarca}\n          </span>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default QuestionAB;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,WAAW,MAAM,uBAAuB;AAC/C,OAAOC,cAAc,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM;IAAEgB,aAAa;IAAEC,UAAU;IAAEC,KAAK;IAAEC;EAAY,CAAC,GAAGlB,UAAU,CAACE,YAAY,CAAC;EAClF,MAAM;IAAEiB,WAAW;IAAEC;EAAU,CAAC,GAAGpB,UAAU,CAACG,WAAW,CAAC;EAC1D,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EAE/C,SAAS0B,WAAWA,CAACd,cAAc,EAAE;IAClCC,iBAAiB,CAACD,cAAc,CAAC;IAClCG,WAAW,CAAC,IAAI,CAAC;IACjB,IAAIH,cAAc,KAAKF,QAAQ,CAACiB,MAAM,EAAE;MACtCX,aAAa,CAAC,CAAC;IACjB,CAAC,MAAM;MACLC,UAAU,CAAC,CAAC;IACd;IACAM,QAAQ,CAAEK,SAAS,IAAKA,SAAS,GAAG,CAAC,CAAC;EACxC;EAEA1B,SAAS,CAAC,MAAM;IACd,IAAIgB,KAAK,KAAK,CAAC,EAAE;MACfO,WAAW,CAAC,IAAI,CAAC;IACnB,CAAC,MAAM,IAAIH,KAAK,GAAG,CAAC,EAAE;MACpB,MAAMO,OAAO,GAAGC,UAAU,CAAC,MAAM;QAC/BjB,iBAAiB,CAAC,IAAI,CAAC;QACvBE,WAAW,CAAC,KAAK,CAAC;QAClBJ,WAAW,CAACS,WAAW,CAAC,CAAC,CAAC;MAC5B,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMW,YAAY,CAACF,OAAO,CAAC;IACpC;EACF,CAAC,EAAE,CAACP,KAAK,EAAEJ,KAAK,EAAEE,WAAW,CAAC,CAAC;EAE/BlB,SAAS,CAAC,MAAM;IACdS,WAAW,CAACS,WAAW,CAAC,CAAC,CAAC;EAC5B,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;EAEjB,MAAMY,OAAO,GAAGA,CAAA,KAAM;IACpBT,QAAQ,CAAC,CAAC,CAAC;IACXE,WAAW,CAAC,KAAK,CAAC;IAClBN,WAAW,CAAC,CAAC;IACbJ,WAAW,CAAC,KAAK,CAAC;IAClBJ,WAAW,CAACS,WAAW,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMa,eAAe,GAAIC,QAAQ,IAAK;IACpC,QAAQb,SAAS;MACf,KAAK,YAAY;QACf,OAAOa,QAAQ,CAACC,QAAQ,GAAG,YAAY;MACzC,KAAK,UAAU;QACb,OAAOD,QAAQ,CAACE,OAAO,GAAG,IAAI;MAChC,KAAK,SAAS;QACZ,OAAOF,QAAQ,CAACG,UAAU,GAAG,KAAK;MACpC;QACE,OAAO,cAAc;IACzB;EACF,CAAC;EAED,IAAIb,QAAQ,EAAE;IACZ,oBAAOjB,OAAA,CAACF,cAAc;MAACiC,SAAS,EAAEN;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC/C;EAEA,IAAI,CAAChC,QAAQ,EAAE;IACb,oBAAOH,OAAA;MAAKoC,SAAS,EAAC,SAAS;MAAAC,QAAA,EAAC;IAAU;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAClD;EAGA,oBACEnC,OAAA;IAAKoC,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BrC,OAAA;MAAIoC,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAElC,QAAQ,CAACmC;IAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9CnC,OAAA;MAAKoC,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAG1BrC,OAAA;QACEuC,OAAO,EAAEA,CAAA,KAAMpB,WAAW,CAAChB,QAAQ,CAACqC,OAAO,CAAE;QAC7CJ,SAAS,EAAC,iBAAiB;QAC3BK,QAAQ,EAAElC,QAAS;QACnBmC,KAAK,EAAE;UACLC,eAAe,EACbpC,QAAQ,IAAIF,cAAc,KAAKF,QAAQ,CAACqC,OAAO,GAC3CrC,QAAQ,CAACqC,OAAO,KAAKrC,QAAQ,CAACiB,MAAM,GAClC,OAAO,GACP,KAAK,GACP;QACR,CAAE;QAAAiB,QAAA,GACDlC,QAAQ,CAACqC,OAAO,CAACb,QAAQ,eAC1B3B,OAAA;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNnC,OAAA;UAAM0C,KAAK,EAAE;YAAEE,QAAQ,EAAE;UAAG,CAAE;UAAAP,QAAA,EAC3B9B,QAAQ,GAAGmB,eAAe,CAACvB,QAAQ,CAACqC,OAAO,CAAC,GAAGrC,QAAQ,CAACqC,OAAO,CAACK;QAAO;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAGTnC,OAAA;QACEuC,OAAO,EAAEA,CAAA,KAAMpB,WAAW,CAAChB,QAAQ,CAAC2C,OAAO,CAAE;QAC7CV,SAAS,EAAC,iBAAiB;QAC3BK,QAAQ,EAAElC,QAAS;QACnBmC,KAAK,EAAE;UACLC,eAAe,EACbpC,QAAQ,IAAIF,cAAc,KAAKF,QAAQ,CAAC2C,OAAO,GAC3C3C,QAAQ,CAAC2C,OAAO,KAAK3C,QAAQ,CAACiB,MAAM,GAClC,OAAO,GACP,KAAK,GACP;QACR,CAAE;QAAAiB,QAAA,GAEDlC,QAAQ,CAAC2C,OAAO,CAACnB,QAAQ,eAC1B3B,OAAA;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACNnC,OAAA;UAAM0C,KAAK,EAAE;YAAEE,QAAQ,EAAE;UAAG,CAAE;UAAAP,QAAA,EAC3B9B,QAAQ,GAAGmB,eAAe,CAACvB,QAAQ,CAAC2C,OAAO,CAAC,GAAG3C,QAAQ,CAAC2C,OAAO,CAACD;QAAO;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjC,EAAA,CAnHQD,UAAU;AAAA8C,EAAA,GAAV9C,UAAU;AAqHnB,eAAeA,UAAU;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}