{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\34676\\\\Documents\\\\Code\\\\Personal projects\\\\Con\\xE8ix Catalunya\\\\geo-quiz\\\\src\\\\components\\\\App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { ScoreProvider } from \"./context/ScoreContext\";\nimport { GameProvider } from \"./context/GameContext\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport GameMenu from \"./GameMenu\";\nimport QuestionTest from \"./QuestionTest\";\nimport QuestionAB from \"./QuestionAB\";\nimport GameOverScreen from \"./GameOVerScreen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isGameMenu, setGameMenu] = useState(true);\n  const [isQuestionTest, setQuestionTest] = useState(false);\n  const [isQuestionAB, setQuestionAB] = useState(false);\n  function showMenu(event) {\n    setGameMenu(true);\n    setQuestionTest(false);\n    setQuestionAB(false);\n  }\n  function questionTest(event) {\n    if (isQuestionTest) {\n      setQuestionTest(false);\n      setQuestionAB(false);\n      setGameMenu(true);\n    } else if (!isQuestionTest) {\n      setQuestionTest(true);\n      setQuestionAB(false);\n      setGameMenu(false);\n    }\n  }\n  function questionAB(event) {\n    if (isQuestionAB) {\n      setQuestionAB(false);\n      setQuestionTest(false);\n      setGameMenu(true);\n    } else if (!isQuestionAB) {\n      setQuestionAB(true);\n      setQuestionTest(false);\n      setGameMenu(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(ScoreProvider, {\n    children: /*#__PURE__*/_jsxDEV(GameProvider, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          menuButton: showMenu,\n          questionTest: questionTest,\n          questionAB: questionAB\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [isGameMenu ? /*#__PURE__*/_jsxDEV(GameMenu, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this) : null, isQuestionTest ? /*#__PURE__*/_jsxDEV(GameOverScreen, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this) : null, isQuestionAB ? /*#__PURE__*/_jsxDEV(QuestionAB, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 27\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"DxwhY9KXNk2doFSuPUozDXrxdIs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ScoreProvider","GameProvider","Header","Footer","GameMenu","QuestionTest","QuestionAB","GameOverScreen","jsxDEV","_jsxDEV","App","_s","isGameMenu","setGameMenu","isQuestionTest","setQuestionTest","isQuestionAB","setQuestionAB","showMenu","event","questionTest","questionAB","children","className","menuButton","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/34676/Documents/Code/Personal projects/Con√®ix Catalunya/geo-quiz/src/components/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { ScoreProvider } from \"./context/ScoreContext\";\r\nimport { GameProvider } from \"./context/GameContext\"\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\nimport GameMenu from \"./GameMenu\";\r\nimport QuestionTest from \"./QuestionTest\";\r\nimport QuestionAB from \"./QuestionAB\";\r\nimport GameOverScreen from \"./GameOVerScreen\";\r\n\r\nfunction App() {\r\n  const [isGameMenu, setGameMenu] = useState(true);\r\n  const [isQuestionTest, setQuestionTest] = useState(false);\r\n  const [isQuestionAB, setQuestionAB] = useState(false);\r\n\r\n  function showMenu(event) {\r\n    setGameMenu(true);\r\n    setQuestionTest(false);\r\n    setQuestionAB(false);\r\n  }\r\n\r\n  function questionTest(event) {\r\n    if (isQuestionTest) {\r\n      setQuestionTest(false);\r\n      setQuestionAB(false);\r\n      setGameMenu(true);\r\n    } else if (!isQuestionTest) {\r\n      setQuestionTest(true);\r\n      setQuestionAB(false);\r\n      setGameMenu(false);\r\n    }\r\n  }\r\n\r\n  function questionAB(event) {\r\n    if (isQuestionAB) {\r\n      setQuestionAB(false);\r\n      setQuestionTest(false);\r\n      setGameMenu(true);\r\n    } else if (!isQuestionAB) {\r\n      setQuestionAB(true);\r\n      setQuestionTest(false);\r\n      setGameMenu(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ScoreProvider>\r\n    <GameProvider>\r\n      <div className=\"app\">\r\n        <Header\r\n          menuButton={showMenu}\r\n          questionTest={questionTest}\r\n          questionAB={questionAB}\r\n        />\r\n        <main>\r\n          {isGameMenu ? <GameMenu /> : null}\r\n          {isQuestionTest ? <GameOverScreen /> : null}\r\n          {isQuestionAB ? <QuestionAB /> : null}\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n      </GameProvider>\r\n    </ScoreProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}